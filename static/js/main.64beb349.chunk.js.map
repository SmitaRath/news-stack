{"version":3,"sources":["HackerNews/styled.js","HackerNews/hnAxios.js","HackerNews/HNewsCard.js","HackerNews/index.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["Grid","styled","div","cols","min","max","StyledLink","a","attrs","rel","target","hnAxios","axios","create","baseURL","HNewsCard","score","id","useQuery","get","getNewsById","enabled","Boolean","isLoading","isFetching","data","refetch","className","Classes","SKELETON","interactive","style","borderRadius","display","justifyContent","href","url","title","content","large","icon","text","onClick","minimal","rightIcon","round","formatDistanceToNowStrict","time","by","intent","topNews","HackerNews","size","topData","slice","map","Header","textAlign","tagName","queryClient","QueryClient","defaultOptions","queries","retry","refetchOnWindowFocus","App","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64beb349.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-gap: 20px;\n  grid-template-columns: ${({ cols = '1', min = '200px', max = '1fr' }) =>\n    `repeat(${cols}, minmax(${min}, ${max}))`};\n`\nexport const StyledLink = styled.a.attrs(() => ({\n  rel: 'noreferrer',\n  target: '_blank',\n}))`\n  line-height: 2;\n  word-spacing: 2px;\n  overflow-wrap: break-word;\n`\n","import axios from 'axios'\n\nexport const hnAxios = axios.create({\n  baseURL: 'https://hacker-news.firebaseio.com/v0/',\n})\n","/* eslint-disable react/prop-types */\nimport React from 'react'\n\nimport {\n  Button,\n  Menu,\n  MenuItem,\n  Tag,\n  Card,\n  Classes,\n  H5,\n} from '@blueprintjs/core'\nimport { Popover2 } from '@blueprintjs/popover2'\nimport { useQuery } from 'react-query'\nimport { formatDistanceToNowStrict } from 'date-fns'\n\nimport { hnAxios } from './hnAxios'\nimport { StyledLink } from './styled'\n\nconst getIntentByScore = score => {\n  if (score > 200 && score < 500) return 'warning'\n  else if (score > 500) return 'danger'\n  return 'none'\n}\n\nconst getNewsById = id => hnAxios.get(`item/${id}.json`)\n\nfunction HNewsCard({ id }) {\n  const { isLoading, isFetching, data, refetch } = useQuery(\n    `hn-${id}`,\n    () => getNewsById(id),\n    {\n      enabled: Boolean(id),\n    },\n  )\n\n  if (isLoading || isFetching) {\n    return (\n      <Card className={Classes.SKELETON} interactive>\n        loading..\n      </Card>\n    )\n  }\n\n  return (\n    <Card style={{ borderRadius: 10 }} interactive>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <H5>\n          <StyledLink href={data.data.url}>{data.data.title}</StyledLink>\n        </H5>\n        <Popover2\n          content={\n            <Menu large>\n              <MenuItem icon=\"refresh\" text=\"refetch\" onClick={refetch} />\n            </Menu>\n          }\n        >\n          <Button icon=\"more\" minimal />\n        </Popover2>\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Tag icon=\"time\" rightIcon=\"user\" interactive round minimal>\n          {formatDistanceToNowStrict(data.data.time * 1000)} -{data.data.by}\n        </Tag>\n        <Tag\n          minimal\n          round\n          icon=\"flame\"\n          intent={getIntentByScore(data.data.score)}\n        >\n          {data.data.score}\n        </Tag>\n      </div>\n    </Card>\n  )\n}\n\nexport default HNewsCard\n","import React from 'react'\n\nimport { useQuery } from 'react-query'\nimport { Spinner } from '@blueprintjs/core'\n\nimport { Grid } from './styled'\nimport { hnAxios } from './hnAxios'\nimport NewsCard from './HNewsCard'\n\nconst topNews = () => hnAxios.get('topstories.json')\n\nexport default function HackerNews() {\n  const { data = [], isLoading } = useQuery(['hn-topstories'], topNews, {})\n\n  if (isLoading) {\n    return <Spinner size={40} />\n  }\n\n  const topData = data.data.slice(0, 50)\n\n  return (\n    <div>\n      <Grid>\n        {topData.map(id => (\n          <NewsCard key={id} id={id} />\n        ))}\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Text } from '@blueprintjs/core'\n\nfunction Header() {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <Text tagName=\"h1\">NewStack</Text>\n      <hr />\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nimport 'normalize.css'\nimport '@blueprintjs/core/lib/css/blueprint.css'\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css'\n\nimport { Card } from '@blueprintjs/core'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport HackerNews from './HackerNews'\nimport Header from './Header'\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      refetchOnWindowFocus: false,\n    },\n  },\n})\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Card>\n        <Header />\n        <HackerNews />\n      </Card>\n    </QueryClientProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}